{"version":3,"sources":["componets/AddCategory.js","helpers/GetGifs.js","componets/GifGridItem.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","imag","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","img","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,cAAcC,EAAgB,EAAhBA,WAAgB,EAEnBC,mBAAS,IAFU,mBAEhDC,EAFgD,KAEpCC,EAFoC,KAavD,OAEI,sBAAMC,SAPU,SAACC,GACjBA,EAAEC,iBACFP,EAAc,CAACG,GAAF,mBAAgBF,KAC7BG,EAAc,KAId,SAEI,uBACII,KAAK,OACLC,MAAON,EACPO,SAhBc,SAACJ,GACvBF,EAAcE,EAAEK,OAAOF,a,+BCRlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,0FAE2EC,UAAUH,GAFrF,sBAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KACDC,EAAQD,EAAKE,KAAK,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAKQ,EAAKG,OAAOC,iBAAiBZ,QATtB,kBAYbM,GAZa,4CAAH,sDCERO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,OAAf,UACI,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAKN,QCFnBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAGRX,mBAAS,CAC/BkB,KAAK,GACLa,SAAQ,IALsB,mBAG3BC,EAH2B,KAGpBC,EAHoB,KA0BlC,OAlBAC,qBAAU,WAENxB,EAASC,GACRwB,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEd,UAIP,CAACpB,IAGGqB,EDvBkBM,CAAa3B,GAA9Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QASnB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAmB,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIjB,aEYvBkB,EA/BM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,WAFvB,mBAEhBD,EAFgB,KAEJD,EAFI,KAQvB,OACI,qCACI,oBAAI6B,UAAU,yBAAd,0BACA,kDAEA,cAAC,EAAD,CAAa7B,cAAeA,EAAeC,WAAYA,IACvD,uBACA,6BAEQA,EAAWqB,KAAI,SAAArB,GAAU,OACzB,cAAC,EAAD,CAASY,SAAUZ,GAAiBA,Y,MCrBxD0C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8949c63a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories,categories}) => {\n    \n    const [inputValue, setinputValue] = useState('')\n\n    const handdleInputChange= (e) => {\n        setinputValue(e.target.value)\n    }\n    \n    const handdleSubmit=(e) => {\n        e.preventDefault();\n        setCategories([inputValue,...categories])\n        setinputValue('')\n    }\n    return ( \n        \n        <form onSubmit={handdleSubmit}>\n            \n            <input\n                type='text'\n                value={inputValue}\n                onChange={handdleInputChange}\n            />\n\n        </form>\n        \n    )\n}\nAddCategory.propTypes = {\n    setCategories:PropTypes.func.isRequired\n}\n\n","export const getGifts = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=yBN2qnyMzYvDOGI5ITghnVcgV7G19dQ0&q=${encodeURI(category)}&limit=10`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs  = data.map (imag => {\n        return {\n            id: imag.id,\n            title: imag.title,\n            url: imag.images.downsized_medium.url\n        }\n    })\n    return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    \n    return (\n        <div className='card'>\n            <p>{title}</p>\n            <img src={url} alt={title}/>\n        </div>\n    )\n} \n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n//import { getGifts } from '../helpers/GetGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n   \n   const { data:images,loading }=useFetchGifs(category);\n\n    //const [images, setImages] = useState([]);\n   \n    //useEffect( () => {\n      // getGifts(category).then(setImages);\n   //}, [category]) //Recibe dos argumentos, se usa el vector vacio para que solo se dispare una vez lo que yo ponga ah√¨\n   \n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            \n            </div>\n        </>\n    )\n}","import { useState, useEffect} from \"react\"\nimport { getGifts } from \"../helpers/GetGifs\";\n\n\nexport const useFetchGifs = (category) => {\n    \n        \n        const [state, setstate] = useState({\n            data:[],\n            loading:true\n        });\n\n        useEffect(() => {\n\n            getGifts(category)\n            .then(imgs => {\n\n                setTimeout(()=>{\n                    \n                    setstate({\n                        data:imgs,\n                        loading:false \n                    });\n                },2000);\n                \n            })\n\n        }, [category])\n\n        \n        return state;\n\n}\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { AddCategory } from './componets/AddCategory'\nimport { GifGrid } from './componets/GifGrid'\n\n\n\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Naruto'])\n\n    //const handdleAdd = () => {\n        //setCategories([...categories,'Nanatzu no Tazai'])\n    //}\n    \n    return (\n        <>\n            <h2 className='animate__fadeInDownBig'>GifExpertApp</h2>\n            <h3>by miguelvel8 bb</h3>\n            \n            <AddCategory setCategories={setCategories} categories={categories}/>           \n            <hr/>\n            <ol>\n                {\n                    categories.map(categories=> ( \n                    <GifGrid category={categories} key={categories}/>\n                    ))\n                }\n            </ol>\n\n        </>\n    )\n}\n\nGifExpertApp.propTypes = {\n\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}